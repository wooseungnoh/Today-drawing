{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.e01fd0bf831f75ee7590.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport Container from '../components/container';\r\nimport { Button, Input, Form } from '../components/uiComponent';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\nimport Router from 'next/Router';\r\n\r\nexport const useInput = (initValue = null) => {\r\n  const [value, setter] = useState(initValue);\r\n  const handler = useCallback((e) => {\r\n    setter(e.target.value);\r\n  }, []);\r\n  return [value, handler];\r\n};\r\n\r\nconst Login = () => {\r\n  const [userId, setUserId] = useInput('');\r\n  const [userPassword, setUserPassword] = useInput('');\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: LOG_IN_REQUEST,\r\n      data: userId,\r\n      userPassword,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      Router.push('/');\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <label>로그인</label>\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={userId}\r\n          onChange={setUserId}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          placeholder=\"패스워드\"\r\n          value={userPassword}\r\n          onChange={setUserPassword}\r\n        />\r\n        <Button onClick={handleLogin}>로그인</Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}