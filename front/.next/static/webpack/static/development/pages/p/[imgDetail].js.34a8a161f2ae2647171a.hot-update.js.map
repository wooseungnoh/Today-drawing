{"version":3,"file":"static/webpack/static\\development\\pages\\p\\[imgDetail].js.34a8a161f2ae2647171a.hot-update.js","sources":["webpack:///./pages/p/[imgDetail].js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Router from 'next/Router';\r\nimport axios from 'axios';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Img,\r\n  Input,\r\n  Textarea,\r\n  Button,\r\n  Form,\r\n} from '../../components/uiComponent';\r\nimport Text from '../../components/text';\r\nimport Container from '../../components/container';\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\r\nimport { faHeart as fullHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  LOAD_POST_DETAIL_REQUEST,\r\n  EDIT_POST_DETAIL_REQUEST,\r\n  DELETE_POST_REQUEST,\r\n  DELETE_STATE_OFF,\r\n  LIKE_REQUEST,\r\n  UNLIKE_REQUEST,\r\n  LIKE_ON,\r\n} from '../../reducers/drawing';\r\n\r\nconst imgDetail = () => {\r\n  const dispatch = useDispatch();\r\n  const [editing, setEditing] = useState(false);\r\n  const { me, isLoggedIn } = useSelector((state) => state.user);\r\n  const {\r\n    nowShowingPost,\r\n    editingSuccess,\r\n    deletePostSuccess,\r\n    like,\r\n  } = useSelector((state) => state.drawing);\r\n\r\n  useEffect(() => {\r\n    const nowUrl = document.location.href;\r\n    const slice = nowUrl.split('p/');\r\n    dispatch({\r\n      type: LOAD_POST_DETAIL_REQUEST,\r\n      data: { postId: slice[1] },\r\n    });\r\n  }, []);\r\n\r\n  const handleEditingState = (e) => {\r\n    e.preventDefault();\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onChangeData = (e) => {\r\n    const result = confirm(\"\")\r\n    e.preventDefault();\r\n    if (me === null) {\r\n      alert('권한이 없습니다.');\r\n      location.href = `${document.location.href}`;\r\n    } else if (me._id === nowShowingPost.post.creator._id) {\r\n      dispatch({\r\n        type: EDIT_POST_DETAIL_REQUEST,\r\n        data: {\r\n          id: nowShowingPost.post._id,\r\n          title: e.target.childNodes[2].value,\r\n          description: e.target.childNodes[4].value,\r\n        },\r\n      });\r\n    } else {\r\n      alert('권한이 없습니다.');\r\n      location.href = `${document.location.href}`;\r\n    }\r\n    setEditing(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editingSuccess) {\r\n      const nowUrl = document.location.href;\r\n      const slice = nowUrl.split('p/');\r\n      dispatch({\r\n        type: LOAD_POST_DETAIL_REQUEST,\r\n        data: { postId: slice[1] },\r\n      });\r\n    }\r\n  }, [editingSuccess]);\r\n\r\n  const onDeletePost = () => {\r\n    if (confirm('정말 게시물을 삭제하시겠습니까?') === true) {\r\n      if (me === null) {\r\n        alert('권한이 없습니다.');\r\n        location.href = `${document.location.href}`;\r\n      } else if (me._id === nowShowingPost.post.creator._id) {\r\n        dispatch({\r\n          type: DELETE_POST_REQUEST,\r\n          data: {\r\n            id: nowShowingPost.post._id,\r\n          },\r\n        });\r\n      } else {\r\n        alert('권한이 없습니다.');\r\n        location.href = `${document.location.href}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (deletePostSuccess) {\r\n      Router.push('/gallery');\r\n      dispatch({\r\n        type: DELETE_STATE_OFF,\r\n        data: {\r\n          id: nowShowingPost.post._id,\r\n        },\r\n      });\r\n    }\r\n  }, [deletePostSuccess]);\r\n\r\n  const likeRequest = () => {\r\n    dispatch({\r\n      type: LIKE_REQUEST,\r\n      data: {\r\n        id: nowShowingPost.post._id,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: LIKE_ON,\r\n    });\r\n  };\r\n\r\n  const unlikeRequest = () => {\r\n    dispatch({\r\n      type: UNLIKE_REQUEST,\r\n      data: {\r\n        id: nowShowingPost.post._id,\r\n      },\r\n    });\r\n  };\r\n  const printLike = () => {\r\n    if (nowShowingPost && me) {\r\n      return String(nowShowingPost.post.liker.indexOf(me._id)) === '-1' ? (\r\n        <FontAwesomeIcon icon={faHeart} onClick={likeRequest} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={fullHeart} onClick={unlikeRequest} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container flexDirection=\"column\">\r\n      {nowShowingPost ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Img\r\n            src={`http://localhost:5000/${nowShowingPost.post.fileUrl}`}\r\n            width=\"30%\"\r\n            style={{ minWidth: '350px' }}\r\n          />\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              textAlign: 'left',\r\n              margin: '10px 0 ',\r\n              width: '30%',\r\n              minWidth: '350px',\r\n            }}\r\n          >\r\n            {editing ? (\r\n              <>\r\n                <Form onSubmit={onChangeData} none>\r\n                  <Container\r\n                    style={{\r\n                      justifyContent: 'space-between',\r\n                    }}\r\n                  >\r\n                    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                      <Text bold fontSize=\"big\" style={{ padding: '15px 0' }}>\r\n                        {`${nowShowingPost.post.creator.writer}`}\r\n                      </Text>\r\n                      <Text fontSize=\"medium\" style={{ paddingBottom: '30px' }}>\r\n                        {`${nowShowingPost.post.createAt.split('T')[0]}`}\r\n                      </Text>\r\n                    </div>\r\n                    <Button style={{ width: '80px' }}>작성완료</Button>\r\n                  </Container>\r\n                  <label>제목</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    style={{ width: '100%' }}\r\n                    defaultValue={nowShowingPost.post.title}\r\n                  />\r\n                  <label>내용</label>\r\n                  <Textarea\r\n                    edit\r\n                    style={{ width: '100%', resize: 'none' }}\r\n                    defaultValue={nowShowingPost.post.description}\r\n                  />\r\n                </Form>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                  }}\r\n                >\r\n                  <Text bold fontSize=\"big\" style={{ padding: '15px 0' }}>\r\n                    {`${nowShowingPost.post.creator.writer}`}\r\n                  </Text>\r\n                  {nowShowingPost.post.creator._id ===\r\n                    nowShowingPost.user._id && isLoggedIn ? (\r\n                    <div>\r\n                      <Button\r\n                        style={{ width: '80px', margin: '2.5px' }}\r\n                        onClick={handleEditingState}\r\n                      >\r\n                        수정\r\n                      </Button>\r\n                      <Button\r\n                        style={{ width: '80px', margin: '2.5px' }}\r\n                        onClick={onDeletePost}\r\n                      >\r\n                        삭제\r\n                      </Button>\r\n                    </div>\r\n                  ) : (\r\n                    printLike()\r\n                  )}\r\n                </div>\r\n                <Text fontSize=\"medium\" style={{ paddingBottom: '30px' }}>\r\n                  {`${nowShowingPost.post.createAt.split('T')[0]}`}\r\n                </Text>\r\n                <Text bold fontSize=\"huge\" style={{ paddingBottom: '15px' }}>\r\n                  {nowShowingPost.post.title}\r\n                </Text>\r\n                <div style={{ width: '100%' }}>\r\n                  <Text>{nowShowingPost.post.description}</Text>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default imgDetail;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AACA;AADA;AASA;AAAA;AATA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}