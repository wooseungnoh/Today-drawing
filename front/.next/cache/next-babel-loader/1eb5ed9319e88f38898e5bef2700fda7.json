{"ast":null,"code":"import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { UPPLOAD_CANVAS_REQUEST, UPPLOAD_CANVAS_SUCCESS, UPPLOAD_CANVAS_FAILURE, UPPLOAD_POST_REQUEST, UPPLOAD_POST_SUCCESS, UPPLOAD_POST_FAILURE, LOAD_GALLERY_SUCCESS, LOAD_GALLERY_FAILURE, LOAD_GALLERY_REQUEST, LOAD_PHOTO_DETAIL_FAILURE } from '../reducers/drawing'; // 미리보기 사진 업로드\n\nfunction addPhotoApi(photoData) {\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPhoto(action) {\n  try {\n    const result = yield call(addPhotoApi, action.data);\n    yield put({\n      type: UPPLOAD_CANVAS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: UPPLOAD_CANVAS_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPhoto() {\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\n} // post upload\n\n\nfunction addPostApi(postData) {\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostApi, action.data);\n    yield put({\n      type: UPPLOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: UPPLOAD_POST_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(UPPLOAD_POST_REQUEST, addPost);\n} // loaded post list\n\n\nfunction loadedPostApi() {\n  return axios.get('http://localhost:5000/upload/loaded', {\n    withCredentials: true\n  });\n}\n\nfunction* loadedPost(action) {\n  try {\n    const result = yield call(loadedPostApi, action.data);\n    yield put({\n      type: LOAD_GALLERY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_GALLERY_FAILURE\n    });\n  }\n}\n\nfunction* watchloadedPost() {\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\n} // 포스트 세부사항 로딩\n\n\nfunction loadedPostDetailApi() {\n  return axios.get('http://localhost:5000/upload/photodetail', {\n    withCredentials: true\n  });\n}\n\nfunction* loadedPostDetail(action) {\n  try {\n    const result = yield call(loadedPostDetailApi, action.data);\n    console.log(result.data);\n    yield put({\n      type: LOAD_PHOTO_DETAIL_SUCCES,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PHOTO_DETAIL_FAILURE\n    });\n  }\n}\n\nfunction* watchloadedPostDetail() {\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPostDetail);\n}\n\nexport default function* drawingSaga() {\n  yield all([fork(watchAddPhoto), fork(watchAddPost), fork(watchloadedPost), fork(watchloadedPostDetail)]);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/drawing.js"],"names":["all","delay","fork","put","takeEvery","call","axios","UPPLOAD_CANVAS_REQUEST","UPPLOAD_CANVAS_SUCCESS","UPPLOAD_CANVAS_FAILURE","UPPLOAD_POST_REQUEST","UPPLOAD_POST_SUCCESS","UPPLOAD_POST_FAILURE","LOAD_GALLERY_SUCCESS","LOAD_GALLERY_FAILURE","LOAD_GALLERY_REQUEST","LOAD_PHOTO_DETAIL_FAILURE","addPhotoApi","photoData","post","withCredentials","addPhoto","action","result","data","type","e","console","log","watchAddPhoto","addPostApi","postData","addPost","watchAddPost","loadedPostApi","get","loadedPost","watchloadedPost","loadedPostDetailApi","loadedPostDetail","LOAD_PHOTO_DETAIL_SUCCES","watchloadedPostDetail","drawingSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  UPPLOAD_CANVAS_REQUEST,\r\n  UPPLOAD_CANVAS_SUCCESS,\r\n  UPPLOAD_CANVAS_FAILURE,\r\n  UPPLOAD_POST_REQUEST,\r\n  UPPLOAD_POST_SUCCESS,\r\n  UPPLOAD_POST_FAILURE,\r\n  LOAD_GALLERY_SUCCESS,\r\n  LOAD_GALLERY_FAILURE,\r\n  LOAD_GALLERY_REQUEST,\r\n  LOAD_PHOTO_DETAIL_FAILURE,\r\n} from '../reducers/drawing';\r\n\r\n// 미리보기 사진 업로드\r\n\r\nfunction addPhotoApi(photoData) {\r\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPhoto(action) {\r\n  try {\r\n    const result = yield call(addPhotoApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPhoto() {\r\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\r\n}\r\n\r\n// post upload\r\n\r\nfunction addPostApi(postData) {\r\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_POST_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(UPPLOAD_POST_REQUEST, addPost);\r\n}\r\n\r\n// loaded post list\r\n\r\nfunction loadedPostApi() {\r\n  return axios.get('http://localhost:5000/upload/loaded', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPost(action) {\r\n  try {\r\n    const result = yield call(loadedPostApi, action.data);\r\n    yield put({\r\n      type: LOAD_GALLERY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_GALLERY_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPost() {\r\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\r\n}\r\n\r\n// 포스트 세부사항 로딩\r\n\r\nfunction loadedPostDetailApi() {\r\n  return axios.get('http://localhost:5000/upload/photodetail', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPostDetail(action) {\r\n  try {\r\n    const result = yield call(loadedPostDetailApi, action.data);\r\n    console.log(result.data);\r\n    yield put({\r\n      type: LOAD_PHOTO_DETAIL_SUCCES,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PHOTO_DETAIL_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPostDetail() {\r\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPostDetail);\r\n}\r\n\r\nexport default function* drawingSaga() {\r\n  yield all([\r\n    fork(watchAddPhoto),\r\n    fork(watchAddPost),\r\n    fork(watchloadedPost),\r\n    fork(watchloadedPostDetail),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}