{"ast":null,"code":"import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, EDITING_PROFILE_SUCCESS, EDITING_PROFILE_REQUEST, EDITING_PROFILE_FAILURE } from '../reducers/user';\n\nfunction signUpAPI(signUpData) {\n  return axios.post('http://localhost:5000/signup', signUpData, {\n    withCredentials: true\n  });\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction loginAPI() {}\n\nfunction* login() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n}\n\nfunction editingAPI() {}\n\nfunction* editing() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: EDITING_PROFILE_SUCCESS\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: EDITING_PROFILE_FAILURE\n    });\n  }\n}\n\nfunction* watchEditing() {\n  yield takeEvery(EDITING_PROFILE_REQUEST, editing);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp), fork(watchEditing)]);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/user.js"],"names":["all","delay","fork","put","takeEvery","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","EDITING_PROFILE_SUCCESS","EDITING_PROFILE_REQUEST","EDITING_PROFILE_FAILURE","signUpAPI","signUpData","post","withCredentials","signUp","action","data","type","e","console","log","watchSignUp","loginAPI","login","watchLogin","editingAPI","editing","watchEditing","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,SAAhC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,uBAPF,EAQEC,uBARF,EASEC,uBATF,QAUO,kBAVP;;AAYA,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,SAAOX,KAAK,CAACY,IAAN,CAAW,8BAAX,EAA2CD,UAA3C,EAAuD;AAC5DE,IAAAA,eAAe,EAAE;AAD2C,GAAvD,CAAP;AAGD;;AAED,UAAUC,MAAV,CAAiBC,MAAjB,EAAyB;AACvB,MAAI;AACF,UAAMhB,IAAI,CAACW,SAAD,EAAYK,MAAM,CAACC,IAAnB,CAAV;AACA,UAAMnB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEb;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOc,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMrB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEX;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUe,WAAV,GAAwB;AACtB,QAAMvB,SAAS,CAACO,eAAD,EAAkBS,MAAlB,CAAf;AACD;;AAED,SAASQ,QAAT,GAAoB,CAAE;;AAEtB,UAAUC,KAAV,GAAkB;AAChB,MAAI;AACF,UAAM5B,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEf;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOgB,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMrB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEd;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUqB,UAAV,GAAuB;AACrB,QAAM1B,SAAS,CAACG,cAAD,EAAiBsB,KAAjB,CAAf;AACD;;AAED,SAASE,UAAT,GAAsB,CAAE;;AAExB,UAAUC,OAAV,GAAoB;AAClB,MAAI;AACF,UAAM/B,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMrB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAER;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUkB,YAAV,GAAyB;AACvB,QAAM7B,SAAS,CAACU,uBAAD,EAA0BkB,OAA1B,CAAf;AACD;;AAED,eAAe,UAAUE,QAAV,GAAqB;AAClC,QAAMlC,GAAG,CAAC,CAACE,IAAI,CAAC4B,UAAD,CAAL,EAAmB5B,IAAI,CAACyB,WAAD,CAAvB,EAAsCzB,IAAI,CAAC+B,YAAD,CAA1C,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_FAILURE,\r\n  EDITING_PROFILE_SUCCESS,\r\n  EDITING_PROFILE_REQUEST,\r\n  EDITING_PROFILE_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction signUpAPI(signUpData) {\r\n  return axios.post('http://localhost:5000/signup', signUpData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    yield call(signUpAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction loginAPI() {}\r\n\r\nfunction* login() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\nfunction editingAPI() {}\r\n\r\nfunction* editing() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: EDITING_PROFILE_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: EDITING_PROFILE_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEditing() {\r\n  yield takeEvery(EDITING_PROFILE_REQUEST, editing);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogin), fork(watchSignUp), fork(watchEditing)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}