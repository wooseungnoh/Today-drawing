{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\todayDraw\\\\front\\\\pages\\\\upload.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Container from '../components/container';\nimport { Button, Ul, Li, Input, InputContainer } from '../components/input';\nimport { Canvas, PainterSize } from '../components/canvas';\nimport Link from 'next/link';\n\nvar Upload = function Upload() {\n  var _useState = useState(2.5),\n      lineSize = _useState[0],\n      setLineSize = _useState[1];\n\n  var _useState2 = useState({\n    painter: false,\n    strokeStyle: '#000',\n    lineWidth: 2.5,\n    defaultCanvasSize: 550\n  }),\n      canvasState = _useState2[0],\n      setCanvasState = _useState2[1];\n\n  var canvas = useRef();\n\n  var startPainting = function startPainting() {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: true\n    }));\n  };\n\n  var stopPainting = function stopPainting() {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: false\n    }));\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    var _e$nativeEvent = e.nativeEvent,\n        y = _e$nativeEvent.offsetY,\n        x = _e$nativeEvent.offsetX;\n    var ctx = canvas.current.getContext('2d');\n\n    if (!canvasState.painter) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  var colorChange = function colorChange(e) {\n    var ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\n    setCanvasState(_objectSpread({}, canvasState, {\n      strokeStyle: e.nativeEvent.target.style.backgroundColor\n    }));\n  };\n\n  var lineWidthChange = function lineWidthChange(e) {\n    var ctx = canvas.current.getContext('2d');\n    var size = e.nativeEvent.target.value;\n    ctx.lineWidth = size;\n  };\n\n  var lineChange = function lineChange(e) {\n    var size = e.nativeEvent.target.value;\n    setLineSize(size);\n  };\n\n  var handleSave = function handleSave() {\n    var image = canvas.current.toDataURL();\n    var link = document.createElement('a');\n    link.href = image;\n    link.download = 'myImg';\n    link.click();\n  };\n\n  useEffect(function () {\n    canvas.current.width = canvasState.defaultCanvasSize;\n    canvas.current.height = canvasState.defaultCanvasSize;\n    var ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = canvasState.strokeStyle;\n    ctx.lineWidth = canvasState.lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasState.defaultCanvasSize, canvasState.defaultCanvasSize);\n  }, []);\n  return __jsx(Container, {\n    style: {\n      flexDirection: 'column'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"\\uADF8\\uB9BC \\uC5C5\\uB85C\\uB4DC\"), __jsx(Container, {\n    style: {\n      padding: '50px',\n      position: 'relative',\n      width: '700px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Canvas, {\n    ref: canvas,\n    onMouseMove: onMouseMove,\n    onMouseDown: startPainting,\n    onMouseUp: stopPainting,\n    onMouseLeave: stopPainting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), __jsx(Ul, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(Li, {\n    style: {\n      backgroundColor: '#000000'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#00a8ff'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#9c88ff'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#fbc531'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#e84118'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid black'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), __jsx(InputContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, __jsx(PainterSize, {\n    size: lineSize,\n    color: canvasState.strokeStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"100\",\n    defaultValue: lineSize,\n    onChange: lineChange,\n    onMouseUp: lineWidthChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, \"SAVE\"), __jsx(Input, {\n    type: \"file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\")));\n};\n\nexport default Upload;","map":{"version":3,"sources":["D:/todayDraw/front/pages/upload.js"],"names":["React","useEffect","useRef","useState","Container","Button","Ul","Li","Input","InputContainer","Canvas","PainterSize","Link","Upload","lineSize","setLineSize","painter","strokeStyle","lineWidth","defaultCanvasSize","canvasState","setCanvasState","canvas","startPainting","stopPainting","onMouseMove","e","nativeEvent","y","offsetY","x","offsetX","ctx","current","getContext","beginPath","moveTo","lineTo","stroke","colorChange","target","style","backgroundColor","lineWidthChange","size","value","lineChange","handleSave","image","toDataURL","link","document","createElement","href","download","click","width","height","lineCap","lineJoin","fillStyle","fillRect","flexDirection","padding","position","border"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SACEC,MADF,EAEEC,EAFF,EAGEC,EAHF,EAIEC,KAJF,EAKEC,cALF,QAMO,qBANP;AAOA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,sBAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBACaV,QAAQ,CAAC,GAAD,CADrB;AAAA,MACZW,QADY;AAAA,MACFC,WADE;;AAAA,mBAEmBZ,QAAQ,CAAC;AAC7Ca,IAAAA,OAAO,EAAE,KADoC;AAE7CC,IAAAA,WAAW,EAAE,MAFgC;AAG7CC,IAAAA,SAAS,EAAE,GAHkC;AAI7CC,IAAAA,iBAAiB,EAAE;AAJ0B,GAAD,CAF3B;AAAA,MAEZC,WAFY;AAAA,MAECC,cAFD;;AAQnB,MAAMC,MAAM,GAAGpB,MAAM,EAArB;;AAEA,MAAMqB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BF,IAAAA,cAAc,mBACTD,WADS;AAEZJ,MAAAA,OAAO,EAAE;AAFG,OAAd;AAID,GALD;;AAOA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBH,IAAAA,cAAc,mBACTD,WADS;AAEZJ,MAAAA,OAAO,EAAE;AAFG,OAAd;AAID,GALD;;AAMA,MAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AAAA,yBACUA,CAAC,CAACC,WADZ;AAAA,QACRC,CADQ,kBACjBC,OADiB;AAAA,QACIC,CADJ,kBACLC,OADK;AAEzB,QAAMC,GAAG,GAAGV,MAAM,CAACW,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ;;AAEA,QAAI,CAACd,WAAW,CAACJ,OAAjB,EAA0B;AACxBgB,MAAAA,GAAG,CAACG,SAAJ;AACAH,MAAAA,GAAG,CAACI,MAAJ,CAAWN,CAAX,EAAcF,CAAd;AACD,KAHD,MAGO;AACLI,MAAAA,GAAG,CAACK,MAAJ,CAAWP,CAAX,EAAcF,CAAd;AACAI,MAAAA,GAAG,CAACM,MAAJ;AACD;AACF,GAXD;;AAaA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACb,CAAD,EAAO;AACzB,QAAMM,GAAG,GAAGV,MAAM,CAACW,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ;AACAF,IAAAA,GAAG,CAACf,WAAJ,GAAkBS,CAAC,CAACC,WAAF,CAAca,MAAd,CAAqBC,KAArB,CAA2BC,eAA7C;AACArB,IAAAA,cAAc,mBACTD,WADS;AAEZH,MAAAA,WAAW,EAAES,CAAC,CAACC,WAAF,CAAca,MAAd,CAAqBC,KAArB,CAA2BC;AAF5B,OAAd;AAID,GAPD;;AASA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,CAAD,EAAO;AAC7B,QAAMM,GAAG,GAAGV,MAAM,CAACW,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ;AACA,QAAMU,IAAI,GAAGlB,CAAC,CAACC,WAAF,CAAca,MAAd,CAAqBK,KAAlC;AACAb,IAAAA,GAAG,CAACd,SAAJ,GAAgB0B,IAAhB;AACD,GAJD;;AAMA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACpB,CAAD,EAAO;AACxB,QAAMkB,IAAI,GAAGlB,CAAC,CAACC,WAAF,CAAca,MAAd,CAAqBK,KAAlC;AACA9B,IAAAA,WAAW,CAAC6B,IAAD,CAAX;AACD,GAHD;;AAKA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,KAAK,GAAG1B,MAAM,CAACW,OAAP,CAAegB,SAAf,EAAd;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAYL,KAAZ;AACAE,IAAAA,IAAI,CAACI,QAAL,GAAgB,OAAhB;AACAJ,IAAAA,IAAI,CAACK,KAAL;AACD,GAND;;AAQAtD,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,MAAM,CAACW,OAAP,CAAeuB,KAAf,GAAuBpC,WAAW,CAACD,iBAAnC;AACAG,IAAAA,MAAM,CAACW,OAAP,CAAewB,MAAf,GAAwBrC,WAAW,CAACD,iBAApC;AAEA,QAAMa,GAAG,GAAGV,MAAM,CAACW,OAAP,CAAeC,UAAf,CAA0B,IAA1B,CAAZ;AAEAF,IAAAA,GAAG,CAACf,WAAJ,GAAkBG,WAAW,CAACH,WAA9B;AACAe,IAAAA,GAAG,CAACd,SAAJ,GAAgBE,WAAW,CAACF,SAA5B;AACAc,IAAAA,GAAG,CAAC0B,OAAJ,GAAc,OAAd;AACA1B,IAAAA,GAAG,CAAC2B,QAAJ,GAAe,OAAf;AACA3B,IAAAA,GAAG,CAAC4B,SAAJ,GAAgB,OAAhB;AACA5B,IAAAA,GAAG,CAAC6B,QAAJ,CACE,CADF,EAEE,CAFF,EAGEzC,WAAW,CAACD,iBAHd,EAIEC,WAAW,CAACD,iBAJd;AAMD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,SACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAE2C,MAAAA,aAAa,EAAE;AAAjB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE,UAA7B;AAAyCR,MAAAA,KAAK,EAAE;AAAhD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,MAAD;AACE,IAAA,GAAG,EAAElC,MADP;AAEE,IAAA,WAAW,EAAEG,WAFf;AAGE,IAAA,WAAW,EAAEF,aAHf;AAIE,IAAA,SAAS,EAAEC,YAJb;AAKE,IAAA,YAAY,EAAEA,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEkB,MAAAA,eAAe,EAAE;AAAnB,KAAX;AAA2C,IAAA,OAAO,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAX;AAA2C,IAAA,OAAO,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAX;AAA2C,IAAA,OAAO,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,MAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAX;AAA2C,IAAA,OAAO,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,EAAD;AAAI,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAX;AAA2C,IAAA,OAAO,EAAEH,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,EAAD;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE,SAAnB;AAA8BuB,MAAAA,MAAM,EAAE;AAAtC,KADT;AAEE,IAAA,OAAO,EAAE1B,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAVF,EAqBE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEzB,QAAnB;AAA6B,IAAA,KAAK,EAAEM,WAAW,CAACH,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAC,KAFN;AAGE,IAAA,GAAG,EAAC,KAHN;AAIE,IAAA,YAAY,EAAEH,QAJhB;AAKE,IAAA,QAAQ,EAAEgC,UALZ;AAME,IAAA,SAAS,EAAEH,eANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,CAFF,EAmCE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnCF,EAuCE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAN,CAvCF,CADF;AA2CD,CA9HD;;AAgIA,eAAelC,MAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Container from '../components/container';\r\nimport {\r\n  Button,\r\n  Ul,\r\n  Li,\r\n  Input,\r\n  InputContainer,\r\n} from '../components/input';\r\nimport { Canvas, PainterSize } from '../components/canvas';\r\nimport Link from 'next/link';\r\n\r\nconst Upload = () => {\r\n  const [lineSize, setLineSize] = useState(2.5);\r\n  const [canvasState, setCanvasState] = useState({\r\n    painter: false,\r\n    strokeStyle: '#000',\r\n    lineWidth: 2.5,\r\n    defaultCanvasSize: 550,\r\n  });\r\n  const canvas = useRef();\r\n\r\n  const startPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: true,\r\n    });\r\n  };\r\n\r\n  const stopPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: false,\r\n    });\r\n  };\r\n  const onMouseMove = (e) => {\r\n    const { offsetY: y, offsetX: x } = e.nativeEvent;\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    if (!canvasState.painter) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n    } else {\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  const colorChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\r\n    setCanvasState({\r\n      ...canvasState,\r\n      strokeStyle: e.nativeEvent.target.style.backgroundColor,\r\n    });\r\n  };\r\n\r\n  const lineWidthChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    const size = e.nativeEvent.target.value;\r\n    ctx.lineWidth = size;\r\n  };\r\n\r\n  const lineChange = (e) => {\r\n    const size = e.nativeEvent.target.value;\r\n    setLineSize(size);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const image = canvas.current.toDataURL();\r\n    const link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'myImg';\r\n    link.click();\r\n  };\r\n\r\n  useEffect(() => {\r\n    canvas.current.width = canvasState.defaultCanvasSize;\r\n    canvas.current.height = canvasState.defaultCanvasSize;\r\n\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    ctx.strokeStyle = canvasState.strokeStyle;\r\n    ctx.lineWidth = canvasState.lineWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(\r\n      0,\r\n      0,\r\n      canvasState.defaultCanvasSize,\r\n      canvasState.defaultCanvasSize,\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{ flexDirection: 'column' }}>\r\n      <h2>그림 업로드</h2>\r\n      <Container\r\n        style={{ padding: '50px', position: 'relative', width: '700px' }}\r\n      >\r\n        <Canvas\r\n          ref={canvas}\r\n          onMouseMove={onMouseMove}\r\n          onMouseDown={startPainting}\r\n          onMouseUp={stopPainting}\r\n          onMouseLeave={stopPainting}\r\n        />\r\n        <Ul>\r\n          <Li style={{ backgroundColor: '#000000' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#00a8ff' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#9c88ff' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#fbc531' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#e84118' }} onClick={colorChange} />\r\n          <Li\r\n            style={{ backgroundColor: '#ffffff', border: '1px solid black' }}\r\n            onClick={colorChange}\r\n          />\r\n        </Ul>\r\n        <InputContainer>\r\n          <PainterSize size={lineSize} color={canvasState.strokeStyle} />\r\n          <Input\r\n            type=\"range\"\r\n            min=\"0.1\"\r\n            max=\"100\"\r\n            defaultValue={lineSize}\r\n            onChange={lineChange}\r\n            onMouseUp={lineWidthChange}\r\n          />\r\n        </InputContainer>\r\n      </Container>\r\n      <Container>\r\n        <Button onClick={handleSave}>SAVE</Button>\r\n        <Input type=\"file\" />\r\n      </Container>\r\n      <Link><a>업로드하기</a></Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}