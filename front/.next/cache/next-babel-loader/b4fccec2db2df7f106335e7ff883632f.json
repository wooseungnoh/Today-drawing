{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\todayDraw\\\\front\\\\pages\\\\drawing.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { CompactPicker } from 'react-color';\nimport React, { useEffect, useRef, useState } from 'react';\nimport AskUploadModal from '../components/askUploadModal';\nimport Container from '../components/container';\nimport { Button, InputContainer } from '../components/uiComponent';\nimport { Canvas, PainterSize, Ul, Li } from '../components/canvas';\nimport { MODAL_ON } from '../reducers/drawing';\nvar Input = styled.input.withConfig({\n  displayName: \"drawing__Input\",\n  componentId: \"sc-7ptcot-0\"\n})([\"\"]);\n\nvar Upload = function Upload() {\n  var _useState = useState(false),\n      colorPicker = _useState[0],\n      setColorPicker = _useState[1];\n\n  var _useState2 = useState('#000'),\n      background = _useState2[0],\n      setBackground = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.drawing;\n  }),\n      modalState = _useSelector.modalState;\n\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(2.5),\n      lineSize = _useState3[0],\n      setLineSize = _useState3[1];\n\n  var _useState4 = useState({\n    painter: false,\n    strokeStyle: '#000',\n    lineWidth: 2.5,\n    defaultCanvasSize: 500\n  }),\n      canvasState = _useState4[0],\n      setCanvasState = _useState4[1];\n\n  var canvas = useRef();\n\n  var startPainting = function startPainting() {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: true\n    }));\n  };\n\n  var stopPainting = function stopPainting() {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: false\n    }));\n  };\n\n  var onMouseMove = function onMouseMove(e) {\n    var _e$nativeEvent = e.nativeEvent,\n        y = _e$nativeEvent.offsetY,\n        x = _e$nativeEvent.offsetX;\n    var ctx = canvas.current.getContext('2d');\n\n    if (!canvasState.painter) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  var colorChange = function colorChange(e) {\n    var ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\n    setCanvasState(_objectSpread({}, canvasState, {\n      strokeStyle: e.nativeEvent.target.style.backgroundColor\n    }));\n  };\n\n  var lineWidthChange = function lineWidthChange(e) {\n    var ctx = canvas.current.getContext('2d');\n    var size = e.nativeEvent.target.value;\n    ctx.lineWidth = size;\n  };\n\n  var lineChange = function lineChange(e) {\n    var size = e.nativeEvent.target.value;\n    setLineSize(size);\n  };\n\n  var handleSave = function handleSave() {\n    var image = canvas.current.toDataURL();\n    var link = document.createElement('a');\n    link.href = image;\n    link.download = 'myImg';\n    link.click();\n    setTimeout(function () {\n      dispatch({\n        type: MODAL_ON\n      });\n    }, 2500);\n  };\n\n  var handleChangeColor = function handleChangeColor(color) {\n    var ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = color.hex;\n    setCanvasState(_objectSpread({}, canvasState, {\n      strokeStyle: \"\".concat(color.hex)\n    }));\n  };\n\n  var togleState = function togleState() {\n    setColorPicker(function (prev) {\n      return !prev;\n    });\n  };\n\n  useEffect(function () {\n    canvas.current.width = canvasState.defaultCanvasSize;\n    canvas.current.height = canvasState.defaultCanvasSize;\n    var ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = canvasState.strokeStyle;\n    ctx.lineWidth = canvasState.lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasState.defaultCanvasSize, canvasState.defaultCanvasSize);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(AskUploadModal, {\n    modalState: modalState,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\uADF8\\uB9BC \\uADF8\\uB9AC\\uAE30\"), __jsx(Container, {\n    style: {\n      padding: '30px 0',\n      width: '580px',\n      position: 'relative',\n      height: '600px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Canvas, {\n    ref: canvas,\n    onMouseMove: onMouseMove,\n    onMouseDown: startPainting,\n    onMouseUp: stopPainting,\n    onMouseLeave: stopPainting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), __jsx(InputContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(PainterSize, {\n    size: lineSize,\n    color: canvasState.strokeStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"100\",\n    defaultValue: lineSize,\n    onChange: lineChange,\n    onMouseUp: lineWidthChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })), __jsx(Ul, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#000000'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#00a8ff'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#9c88ff'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#fbc531'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#e84118'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    scale: true,\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid black'\n    },\n    onClick: colorChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), __jsx(Li, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    onClick: togleState,\n    style: {\n      width: '100%',\n      height: '100%',\n      background: 'url(\"/static/color_circle.png\")',\n      borderRadius: '50%',\n      backgroundSize: 'cover'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }), colorPicker ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, __jsx(CompactPicker, {\n    color: canvasState.strokeStyle,\n    onChangeComplete: handleChangeColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  })) : __jsx(React.Fragment, null)))), __jsx(Button, {\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, \"SAVE\")));\n};\n\nexport default Upload;","map":{"version":3,"sources":["D:/todayDraw/front/pages/drawing.js"],"names":["useSelector","useDispatch","styled","CompactPicker","React","useEffect","useRef","useState","AskUploadModal","Container","Button","InputContainer","Canvas","PainterSize","Ul","Li","MODAL_ON","Input","input","Upload","colorPicker","setColorPicker","background","setBackground","state","drawing","modalState","dispatch","lineSize","setLineSize","painter","strokeStyle","lineWidth","defaultCanvasSize","canvasState","setCanvasState","canvas","startPainting","stopPainting","onMouseMove","e","nativeEvent","y","offsetY","x","offsetX","ctx","current","getContext","beginPath","moveTo","lineTo","stroke","colorChange","target","style","backgroundColor","lineWidthChange","size","value","lineChange","handleSave","image","toDataURL","link","document","createElement","href","download","click","setTimeout","type","handleChangeColor","color","hex","togleState","prev","width","height","lineCap","lineJoin","fillStyle","fillRect","margin","padding","position","border","borderRadius","backgroundSize"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { CompactPicker } from 'react-color';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport AskUploadModal from '../components/askUploadModal';\r\nimport Container from '../components/container';\r\nimport { Button, InputContainer } from '../components/uiComponent';\r\nimport { Canvas, PainterSize, Ul, Li } from '../components/canvas';\r\nimport { MODAL_ON } from '../reducers/drawing';\r\n\r\nconst Input = styled.input``;\r\n\r\nconst Upload = () => {\r\n  const [colorPicker, setColorPicker] = useState(false);\r\n  const [background, setBackground] = useState('#000');\r\n  const { modalState } = useSelector((state) => state.drawing);\r\n  const dispatch = useDispatch();\r\n  const [lineSize, setLineSize] = useState(2.5);\r\n  const [canvasState, setCanvasState] = useState({\r\n    painter: false,\r\n    strokeStyle: '#000',\r\n    lineWidth: 2.5,\r\n    defaultCanvasSize: 500,\r\n  });\r\n  const canvas = useRef();\r\n\r\n  const startPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: true,\r\n    });\r\n  };\r\n\r\n  const stopPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: false,\r\n    });\r\n  };\r\n  const onMouseMove = (e) => {\r\n    const { offsetY: y, offsetX: x } = e.nativeEvent;\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    if (!canvasState.painter) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n    } else {\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  const colorChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\r\n    setCanvasState({\r\n      ...canvasState,\r\n      strokeStyle: e.nativeEvent.target.style.backgroundColor,\r\n    });\r\n  };\r\n\r\n  const lineWidthChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    const size = e.nativeEvent.target.value;\r\n    ctx.lineWidth = size;\r\n  };\r\n\r\n  const lineChange = (e) => {\r\n    const size = e.nativeEvent.target.value;\r\n    setLineSize(size);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const image = canvas.current.toDataURL();\r\n    const link = document.createElement('a');\r\n    link.href = image;\r\n    link.download = 'myImg';\r\n    link.click();\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: MODAL_ON,\r\n      });\r\n    }, 2500);\r\n  };\r\n\r\n  const handleChangeColor = (color) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.strokeStyle = color.hex;\r\n    setCanvasState({\r\n      ...canvasState,\r\n      strokeStyle: `${color.hex}`,\r\n    });\r\n  };\r\n\r\n  const togleState = () => {\r\n    setColorPicker((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    canvas.current.width = canvasState.defaultCanvasSize;\r\n    canvas.current.height = canvasState.defaultCanvasSize;\r\n\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    ctx.strokeStyle = canvasState.strokeStyle;\r\n    ctx.lineWidth = canvasState.lineWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(\r\n      0,\r\n      0,\r\n      canvasState.defaultCanvasSize,\r\n      canvasState.defaultCanvasSize,\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AskUploadModal modalState={modalState} />\r\n      <Container flexDirection=\"column\">\r\n        <h2 style={{ margin: 0 }}>그림 그리기</h2>\r\n        <Container\r\n          style={{\r\n            padding: '30px 0',\r\n            width: '580px',\r\n            position: 'relative',\r\n            height: '600px',\r\n          }}\r\n        >\r\n          <Canvas\r\n            ref={canvas}\r\n            onMouseMove={onMouseMove}\r\n            onMouseDown={startPainting}\r\n            onMouseUp={stopPainting}\r\n            onMouseLeave={stopPainting}\r\n          />\r\n          <InputContainer>\r\n            <PainterSize size={lineSize} color={canvasState.strokeStyle} />\r\n            <Input\r\n              type=\"range\"\r\n              min=\"0.1\"\r\n              max=\"100\"\r\n              defaultValue={lineSize}\r\n              onChange={lineChange}\r\n              onMouseUp={lineWidthChange}\r\n            />\r\n          </InputContainer>\r\n          <Ul>\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#000000' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#00a8ff' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#9c88ff' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#fbc531' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#e84118' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li\r\n              scale\r\n              style={{ backgroundColor: '#ffffff', border: '1px solid black' }}\r\n              onClick={colorChange}\r\n            />\r\n            <Li>\r\n              <div\r\n                onClick={togleState}\r\n                style={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  background: 'url(\"/static/color_circle.png\")',\r\n                  borderRadius: '50%',\r\n                  backgroundSize: 'cover',\r\n                }}\r\n              ></div>\r\n              {colorPicker ? (\r\n                <div>\r\n                  <CompactPicker\r\n                  color={canvasState.strokeStyle}\r\n                  onChangeComplete={handleChangeColor}\r\n                />\r\n                </div>\r\n                \r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Li>\r\n          </Ul>\r\n        </Container>\r\n        <Button onClick={handleSave}>SAVE</Button>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}