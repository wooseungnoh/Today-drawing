{"ast":null,"code":"import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { UPPLOAD_CANVAS_REQUEST, UPPLOAD_CANVAS_SUCCESS, UPPLOAD_CANVAS_FAILURE, UPPLOAD_POST_REQUEST, UPPLOAD_POST_SUCCESS, UPPLOAD_POST_FAILURE, LOAD_GALLERY_SUCCESS, LOAD_GALLERY_FAILURE, LOAD_GALLERY_REQUEST, LOAD_PHOTO_DETAIL_FAILURE, LOAD_PHOTO_DETAIL_SUCCESS, LOAD_PHOTO_DETAIL_REQUEST, EDIT_PHOTO_DETAIL_SUCCESS, EDIT_PHOTO_DETAIL_FAILURE } from '../reducers/drawing'; // 미리보기 사진 업로드\n\nfunction addPhotoApi(photoData) {\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPhoto(action) {\n  try {\n    const result = yield call(addPhotoApi, action.data);\n    yield put({\n      type: UPPLOAD_CANVAS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: UPPLOAD_CANVAS_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPhoto() {\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\n} // post upload\n\n\nfunction addPostApi(postData) {\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostApi, action.data);\n    yield put({\n      type: UPPLOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: UPPLOAD_POST_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(UPPLOAD_POST_REQUEST, addPost);\n} // loaded post list\n\n\nfunction loadedPostApi() {\n  return axios.get('http://localhost:5000/upload/loaded', {\n    withCredentials: true\n  });\n}\n\nfunction* loadedPost(action) {\n  try {\n    const result = yield call(loadedPostApi, action.data);\n    yield put({\n      type: LOAD_GALLERY_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_GALLERY_FAILURE\n    });\n  }\n}\n\nfunction* watchloadedPost() {\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\n} // 포스트 세부사항 로딩\n\n\nfunction loadedPostDetailApi(urldata) {\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\n    withCredentials: true\n  });\n}\n\nfunction* loadedPostDetail(action) {\n  try {\n    const result = yield call(loadedPostDetailApi, action.data);\n    yield put({\n      type: LOAD_PHOTO_DETAIL_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOAD_PHOTO_DETAIL_FAILURE\n    });\n  }\n}\n\nfunction* watchloadedPostDetail() {\n  yield takeEvery(LOAD_PHOTO_DETAIL_REQUEST, loadedPostDetail);\n} // 포스트 에딧\n\n\nfunction editPostDetailApi(urldata) {\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\n    withCredentials: true\n  });\n}\n\nfunction* editPostDetail(action) {\n  try {\n    const result = yield call(editPostDetailApi, action.data);\n    yield put({\n      type: EDIT_PHOTO_DETAIL_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: EDIT_PHOTO_DETAIL_FAILURE\n    });\n  }\n}\n\nfunction* watchEditPostDetail() {\n  yield takeEvery(EDIT_PHOTO_DETAIL_REQUEST, editPostDetail);\n}\n\nexport default function* drawingSaga() {\n  yield all([fork(watchAddPhoto), fork(watchAddPost), fork(watchloadedPost), fork(watchloadedPostDetail), fork(watchEditPostDetail)]);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/drawing.js"],"names":["all","delay","fork","put","takeEvery","call","axios","UPPLOAD_CANVAS_REQUEST","UPPLOAD_CANVAS_SUCCESS","UPPLOAD_CANVAS_FAILURE","UPPLOAD_POST_REQUEST","UPPLOAD_POST_SUCCESS","UPPLOAD_POST_FAILURE","LOAD_GALLERY_SUCCESS","LOAD_GALLERY_FAILURE","LOAD_GALLERY_REQUEST","LOAD_PHOTO_DETAIL_FAILURE","LOAD_PHOTO_DETAIL_SUCCESS","LOAD_PHOTO_DETAIL_REQUEST","EDIT_PHOTO_DETAIL_SUCCESS","EDIT_PHOTO_DETAIL_FAILURE","addPhotoApi","photoData","post","withCredentials","addPhoto","action","result","data","type","e","console","log","watchAddPhoto","addPostApi","postData","addPost","watchAddPost","loadedPostApi","get","loadedPost","watchloadedPost","loadedPostDetailApi","urldata","loadedPostDetail","watchloadedPostDetail","editPostDetailApi","editPostDetail","watchEditPostDetail","EDIT_PHOTO_DETAIL_REQUEST","drawingSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  UPPLOAD_CANVAS_REQUEST,\r\n  UPPLOAD_CANVAS_SUCCESS,\r\n  UPPLOAD_CANVAS_FAILURE,\r\n  UPPLOAD_POST_REQUEST,\r\n  UPPLOAD_POST_SUCCESS,\r\n  UPPLOAD_POST_FAILURE,\r\n  LOAD_GALLERY_SUCCESS,\r\n  LOAD_GALLERY_FAILURE,\r\n  LOAD_GALLERY_REQUEST,\r\n  LOAD_PHOTO_DETAIL_FAILURE,\r\n  LOAD_PHOTO_DETAIL_SUCCESS,\r\n  LOAD_PHOTO_DETAIL_REQUEST,\r\n  EDIT_PHOTO_DETAIL_SUCCESS,\r\n  EDIT_PHOTO_DETAIL_FAILURE,\r\n} from '../reducers/drawing';\r\n\r\n// 미리보기 사진 업로드\r\n\r\nfunction addPhotoApi(photoData) {\r\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPhoto(action) {\r\n  try {\r\n    const result = yield call(addPhotoApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPhoto() {\r\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\r\n}\r\n\r\n// post upload\r\n\r\nfunction addPostApi(postData) {\r\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_POST_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(UPPLOAD_POST_REQUEST, addPost);\r\n}\r\n\r\n// loaded post list\r\n\r\nfunction loadedPostApi() {\r\n  return axios.get('http://localhost:5000/upload/loaded', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPost(action) {\r\n  try {\r\n    const result = yield call(loadedPostApi, action.data);\r\n    yield put({\r\n      type: LOAD_GALLERY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_GALLERY_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPost() {\r\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\r\n}\r\n\r\n// 포스트 세부사항 로딩\r\n\r\nfunction loadedPostDetailApi(urldata) {\r\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPostDetail(action) {\r\n  try {\r\n    const result = yield call(loadedPostDetailApi, action.data);\r\n    yield put({\r\n      type: LOAD_PHOTO_DETAIL_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_PHOTO_DETAIL_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPostDetail() {\r\n  yield takeEvery(LOAD_PHOTO_DETAIL_REQUEST, loadedPostDetail);\r\n}\r\n\r\n// 포스트 에딧\r\n\r\nfunction editPostDetailApi(urldata) {\r\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* editPostDetail(action) {\r\n  try {\r\n    const result = yield call(editPostDetailApi, action.data);\r\n    yield put({\r\n      type: EDIT_PHOTO_DETAIL_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: EDIT_PHOTO_DETAIL_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEditPostDetail() {\r\n  yield takeEvery(EDIT_PHOTO_DETAIL_REQUEST, editPostDetail);\r\n}\r\n\r\nexport default function* drawingSaga() {\r\n  yield all([\r\n    fork(watchAddPhoto),\r\n    fork(watchAddPost),\r\n    fork(watchloadedPost),\r\n    fork(watchloadedPostDetail),\r\n    fork(watchEditPostDetail),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}