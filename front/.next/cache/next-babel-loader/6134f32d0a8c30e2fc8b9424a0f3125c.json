{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shdnt\\\\Desktop\\\\today\\\\front\\\\pages\\\\upload.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/Router';\nimport Container from '../components/container';\nimport { Input, Form, Textarea } from '../components/uiComponent';\nimport { UPPLOAD_CANVAS_REQUEST } from '../reducers/drawing';\nimport { useInput } from './login';\n\nconst Upload = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.drawing);\n  const {\n    isLoggedIn\n  } = useSelector(state => state.user);\n  const [title, setTitle] = useInput('');\n  const [desciption, setDesciption] = useInput('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      Router.push('/');\n    }\n  }, [isLoggedIn]);\n\n  const addPhoto = e => {\n    e.preventDefault();\n  };\n\n  const handlePhotoFile = e => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('photo', f);\n    });\n    dispatch({\n      type: UPPLOAD_CANVAS_REQUEST,\n      data: imageFormData\n    });\n  };\n\n  return __jsx(Container, {\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    wsize: \"300px\",\n    hsize: \"300px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, imagePaths[0] ? __jsx(\"img\", {\n    src: `http://localhost:5000/${imagePaths[0]}`,\n    style: {\n      width: '100%'\n    },\n    alt: imagePaths[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }\n  }) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 129\n    }\n  }, \"\\uBBF8\\uB9AC\\uBCF4\\uAE30 \\uC774\\uBBF8\\uC9C0\")), __jsx(Form, {\n    onSubmit: addPhoto,\n    encType: \"multipart/form-data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"\\uD30C\\uC77C \\uC120\\uD0DD\"), __jsx(Input, {\n    type: \"file\",\n    name: \"photo\",\n    onChange: handlePhotoFile,\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"\\uADF8\\uB9BC \\uC81C\\uBAA9\"), __jsx(Input, {\n    value: title,\n    onChange: setTitle,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"\\uADF8\\uB9BC \\uC124\\uBA85\"), __jsx(Textarea, {\n    value: desciption,\n    onChange: setDesciption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    type: \"submit\",\n    value: \"\\uC791\\uC131\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/shdnt/Desktop/today/front/pages/upload.js"],"names":["React","useEffect","useSelector","useDispatch","Router","Container","Input","Form","Textarea","UPPLOAD_CANVAS_REQUEST","useInput","Upload","imagePaths","state","drawing","isLoggedIn","user","title","setTitle","desciption","setDesciption","dispatch","push","addPhoto","e","preventDefault","handlePhotoFile","imageFormData","FormData","forEach","call","target","files","f","append","type","data","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/Router';\r\nimport Container from '../components/container';\r\nimport { Input, Form, Textarea } from '../components/uiComponent';\r\nimport { UPPLOAD_CANVAS_REQUEST } from '../reducers/drawing';\r\nimport { useInput } from './login';\r\n\r\nconst Upload = () => {\r\n  const { imagePaths } = useSelector((state) => state.drawing);\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n  const [title, setTitle] = useInput('');\r\n  const [desciption, setDesciption] = useInput('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      Router.push('/');\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const addPhoto = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handlePhotoFile = (e) => {\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append('photo', f);\r\n    });\r\n    dispatch({\r\n      type: UPPLOAD_CANVAS_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container flexDirection=\"column\">\r\n      <Container wsize=\"300px\" hsize=\"300px\">\r\n        {imagePaths[0] ? <img src={`http://localhost:5000/${imagePaths[0]}`} style={{ width: '100%' }} alt={imagePaths[0]} /> : <span>미리보기 이미지</span>}\r\n\r\n      </Container>\r\n      <Form onSubmit={addPhoto} encType=\"multipart/form-data\">\r\n        <label htmlFor=\"file\">파일 선택</label>\r\n        <Input\r\n          type=\"file\"\r\n          name=\"photo\"\r\n          onChange={handlePhotoFile}\r\n          accept=\"image/*\"\r\n        />\r\n\r\n        <label>그림 제목</label>\r\n        <Input value={title} onChange={setTitle} type=\"text\" />\r\n\r\n        <label>그림 설명</label>\r\n        <Textarea value={desciption} onChange={setDesciption} />\r\n        <Input type=\"submit\" value=\"작성\" />\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}