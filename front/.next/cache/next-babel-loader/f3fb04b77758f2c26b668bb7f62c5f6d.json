{"ast":null,"code":"var _jsxFileName = \"D:\\\\todayDraw\\\\front\\\\pages\\\\upload.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Container from '../components/container';\nimport styled from 'styled-components';\nconst Ul = styled.ul`\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  transition: 0.5s;\n`;\nconst Li = styled.li`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  list-style: none;\n`;\nconst Canvas = styled.canvas`\n  width: 700px;\n  height: 700px;\n  border-radius: 15px;\n  background: #ffffff;\n  box-shadow: 18px 18px 25px #00000057, -18px -18px 25px #ffffff;\n`;\n\nconst Upload = () => {\n  const {\n    0: canvasState,\n    1: setCanvasState\n  } = useState({\n    painter: false,\n    strokeStyle: '#000',\n    lineWidth: 2.5\n  });\n  const canvas = useRef();\n\n  const startPainting = () => {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: true\n    }));\n  };\n\n  const stopPainting = () => {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: false\n    }));\n  };\n\n  const onMouseMove = e => {\n    const {\n      offsetY: y,\n      offsetX: x\n    } = e.nativeEvent;\n    const ctx = canvas.current.getContext('2d');\n\n    if (!canvasState.painter) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  useEffect(() => {\n    canvas.current.width = 700;\n    canvas.current.height = 700;\n    const ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = canvasState.strokeStyle;\n    ctx.lineWidth = canvasState.lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n  }, []);\n  return __jsx(Container, {\n    style: {\n      padding: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(Canvas, {\n    ref: canvas,\n    onMouseMove: onMouseMove,\n    onMouseDown: startPainting,\n    onMouseUp: stopPainting,\n    onMouseLeave: stopPainting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(Li, {\n    style: {\n      backgroundColor: '#00a8ff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#9c88ff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#fbc531'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#e84118'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["D:/todayDraw/front/pages/upload.js"],"names":["React","useEffect","useRef","useState","Container","styled","Ul","ul","Li","li","Canvas","canvas","Upload","canvasState","setCanvasState","painter","strokeStyle","lineWidth","startPainting","stopPainting","onMouseMove","e","offsetY","y","offsetX","x","nativeEvent","ctx","current","getContext","beginPath","moveTo","lineTo","stroke","width","height","lineCap","lineJoin","padding","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Container from '../components/container';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: row;\r\n  transition: 0.5s;\r\n`;\r\nconst Li = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  list-style: none;\r\n`;\r\nconst Canvas = styled.canvas`\r\n  width: 700px;\r\n  height: 700px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 18px 18px 25px #00000057, -18px -18px 25px #ffffff;\r\n`;\r\n\r\nconst Upload = () => {\r\n  const [canvasState, setCanvasState] = useState({\r\n    painter: false,\r\n    strokeStyle: '#000',\r\n    lineWidth: 2.5,\r\n  });\r\n  const canvas = useRef();\r\n\r\n  const startPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: true,\r\n    });\r\n  };\r\n  const stopPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: false,\r\n    });\r\n  };\r\n  const onMouseMove = (e) => {\r\n    const { offsetY: y, offsetX: x } = e.nativeEvent;\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    if (!canvasState.painter) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n    } else {\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    canvas.current.width = 700;\r\n    canvas.current.height = 700;\r\n\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    ctx.strokeStyle = canvasState.strokeStyle;\r\n    ctx.lineWidth = canvasState.lineWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{ padding: '50px' }}>\r\n      <Canvas\r\n        ref={canvas}\r\n        onMouseMove={onMouseMove}\r\n        onMouseDown={startPainting}\r\n        onMouseUp={stopPainting}\r\n        onMouseLeave={stopPainting}>\r\n      </Canvas>\r\n        <Ul>\r\n          <Li style={{ backgroundColor: '#00a8ff' }} />\r\n          <Li style={{ backgroundColor: '#9c88ff' }} />\r\n          <Li style={{ backgroundColor: '#fbc531' }} />\r\n          <Li style={{ backgroundColor: '#e84118' }} />\r\n        </Ul>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}