{"ast":null,"code":"var _jsxFileName = \"D:\\\\todayDraw\\\\front\\\\pages\\\\upload.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Container from '../components/container';\nimport styled from 'styled-components';\nconst Button = styled.button.withConfig({\n  displayName: \"upload__Button\",\n  componentId: \"sc-19rfv45-0\"\n})([\"\"]);\nconst Ul = styled.ul.withConfig({\n  displayName: \"upload__Ul\",\n  componentId: \"sc-19rfv45-1\"\n})([\"position:absolute;display:flex;flex-direction:row;bottom:45px;\"]);\nconst Li = styled.li.withConfig({\n  displayName: \"upload__Li\",\n  componentId: \"sc-19rfv45-2\"\n})([\"width:30px;height:30px;border-radius:50%;margin:5px;list-style:none;cursor:pointer;\"]);\nconst Canvas = styled.canvas.withConfig({\n  displayName: \"upload__Canvas\",\n  componentId: \"sc-19rfv45-3\"\n})([\"width:550px;height:550px;border-radius:15px;background:#ffffff;box-shadow:18px 18px 25px #00000057,-18px -18px 25px #ffffff;\"]);\nconst RangeInput = styled.input.withConfig({\n  displayName: \"upload__RangeInput\",\n  componentId: \"sc-19rfv45-4\"\n})([\"\"]);\nconst InputContainer = styled.div.withConfig({\n  displayName: \"upload__InputContainer\",\n  componentId: \"sc-19rfv45-5\"\n})([\"height:10px;display:flex;flex-direction:row-reverse;justify-content:center;align-items:center;transform:rotate(-90deg);position:absolute;right:100px;\"]);\nconst PainterSize = styled.div.withConfig({\n  displayName: \"upload__PainterSize\",\n  componentId: \"sc-19rfv45-6\"\n})([\"position:absolute;width:\", \"px;height:\", \"px;background:\", \";border-radius:50%;transform:translateX(120px);\"], ({\n  size\n}) => size || '2.5', ({\n  size\n}) => size || '2.5', ({\n  color\n}) => color || '#000000');\n\nconst Upload = () => {\n  const {\n    0: lineSize,\n    1: setLineSize\n  } = useState(2.5);\n  const {\n    0: canvasState,\n    1: setCanvasState\n  } = useState({\n    painter: false,\n    strokeStyle: '#000',\n    lineWidth: 2.5,\n    defaultCanvasSize: 550\n  });\n  const canvas = useRef();\n\n  const startPainting = () => {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: true\n    }));\n  };\n\n  const stopPainting = () => {\n    setCanvasState(_objectSpread({}, canvasState, {\n      painter: false\n    }));\n  };\n\n  const onMouseMove = e => {\n    const {\n      offsetY: y,\n      offsetX: x\n    } = e.nativeEvent;\n    const ctx = canvas.current.getContext('2d');\n\n    if (!canvasState.painter) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    }\n  };\n\n  const colorChange = e => {\n    const ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\n    setCanvasState(_objectSpread({}, canvasState, {\n      strokeStyle: e.nativeEvent.target.style.backgroundColor\n    }));\n  };\n\n  const lineWidthChange = e => {\n    const ctx = canvas.current.getContext('2d');\n    const size = e.nativeEvent.target.value;\n    ctx.lineWidth = size;\n  };\n\n  const lineChange = e => {\n    const size = e.nativeEvent.target.value;\n    setLineSize(size);\n  };\n\n  const handleSave = () => {\n    const image = canvas.current.toDataURL();\n    const link = document.createElement('a');\n  };\n\n  useEffect(() => {\n    canvas.current.width = canvasState.defaultCanvasSize;\n    canvas.current.height = canvasState.defaultCanvasSize;\n    const ctx = canvas.current.getContext('2d');\n    ctx.strokeStyle = canvasState.strokeStyle;\n    ctx.lineWidth = canvasState.lineWidth;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvasState.defaultCanvasSize, canvasState.defaultCanvasSize);\n  }, []);\n  return __jsx(Container, {\n    style: {\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: '50px',\n      position: 'relative',\n      width: '700px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(Canvas, {\n    ref: canvas,\n    onMouseMove: onMouseMove,\n    onMouseDown: startPainting,\n    onMouseUp: stopPainting,\n    onMouseLeave: stopPainting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), __jsx(Ul, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(Li, {\n    style: {\n      backgroundColor: '#000000'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#00a8ff'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#9c88ff'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#fbc531'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#e84118'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }), __jsx(Li, {\n    style: {\n      backgroundColor: '#ffffff',\n      border: '1px solid black'\n    },\n    onClick: colorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  })), __jsx(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, __jsx(PainterSize, {\n    size: lineSize,\n    color: canvasState.strokeStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }), __jsx(RangeInput, {\n    type: \"range\",\n    min: \"0.1\",\n    max: \"100\",\n    defaultValue: lineSize,\n    onChange: lineChange,\n    onMouseUp: lineWidthChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }))), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"SAVE\"));\n};\n\nexport default Upload;","map":{"version":3,"sources":["D:/todayDraw/front/pages/upload.js"],"names":["React","useEffect","useRef","useState","Container","styled","Button","button","Ul","ul","Li","li","Canvas","canvas","RangeInput","input","InputContainer","div","PainterSize","size","color","Upload","lineSize","setLineSize","canvasState","setCanvasState","painter","strokeStyle","lineWidth","defaultCanvasSize","startPainting","stopPainting","onMouseMove","e","offsetY","y","offsetX","x","nativeEvent","ctx","current","getContext","beginPath","moveTo","lineTo","stroke","colorChange","target","style","backgroundColor","lineWidthChange","value","lineChange","handleSave","image","toDataURL","link","document","createElement","width","height","lineCap","lineJoin","fillStyle","fillRect","flexDirection","padding","position","border"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Container from '../components/container';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button``;\r\n\r\nconst Ul = styled.ul`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: row;\r\n  bottom: 45px;\r\n`;\r\nconst Li = styled.li`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  margin: 5px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n`;\r\nconst Canvas = styled.canvas`\r\n  width: 550px;\r\n  height: 550px;\r\n  border-radius: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 18px 18px 25px #00000057, -18px -18px 25px #ffffff;\r\n`;\r\n\r\nconst RangeInput = styled.input``;\r\n\r\nconst InputContainer = styled.div`\r\n  height: 10px;\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transform: rotate(-90deg);\r\n  position: absolute;\r\n  right: 100px;\r\n`;\r\n\r\nconst PainterSize = styled.div`\r\n  position: absolute;\r\n  width: ${({ size }) => size || '2.5'}px;\r\n  height: ${({ size }) => size || '2.5'}px;\r\n  background: ${({ color }) => color || '#000000'};\r\n  border-radius: 50%;\r\n  transform: translateX(120px);\r\n`;\r\n\r\nconst Upload = () => {\r\n  const [lineSize, setLineSize] = useState(2.5);\r\n  const [canvasState, setCanvasState] = useState({\r\n    painter: false,\r\n    strokeStyle: '#000',\r\n    lineWidth: 2.5,\r\n    defaultCanvasSize: 550,\r\n  });\r\n  const canvas = useRef();\r\n\r\n  const startPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: true,\r\n    });\r\n  };\r\n  const stopPainting = () => {\r\n    setCanvasState({\r\n      ...canvasState,\r\n      painter: false,\r\n    });\r\n  };\r\n  const onMouseMove = (e) => {\r\n    const { offsetY: y, offsetX: x } = e.nativeEvent;\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    if (!canvasState.painter) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n    } else {\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n    }\r\n  };\r\n\r\n  const colorChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.strokeStyle = e.nativeEvent.target.style.backgroundColor;\r\n    setCanvasState({\r\n      ...canvasState,\r\n      strokeStyle: e.nativeEvent.target.style.backgroundColor,\r\n    });\r\n  };\r\n\r\n  const lineWidthChange = (e) => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    const size = e.nativeEvent.target.value;\r\n    ctx.lineWidth = size;\r\n  };\r\n\r\n  const lineChange = (e) => {\r\n    const size = e.nativeEvent.target.value;\r\n    setLineSize(size);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const image = canvas.current.toDataURL();\r\n    const link = document.createElement('a')\r\n    \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    canvas.current.width = canvasState.defaultCanvasSize;\r\n    canvas.current.height = canvasState.defaultCanvasSize;\r\n\r\n    const ctx = canvas.current.getContext('2d');\r\n\r\n    ctx.strokeStyle = canvasState.strokeStyle;\r\n    ctx.lineWidth = canvasState.lineWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.fillStyle = 'white';\r\n    ctx.fillRect(\r\n      0,\r\n      0,\r\n      canvasState.defaultCanvasSize,\r\n      canvasState.defaultCanvasSize\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Container style={{flexDirection:\"column\"}}>\r\n      <Container\r\n        style={{ padding: '50px', position: 'relative', width: '700px' }}>\r\n        <Canvas\r\n          ref={canvas}\r\n          onMouseMove={onMouseMove}\r\n          onMouseDown={startPainting}\r\n          onMouseUp={stopPainting}\r\n          onMouseLeave={stopPainting}\r\n        />\r\n        <Ul>\r\n          <Li style={{ backgroundColor: '#000000' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#00a8ff' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#9c88ff' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#fbc531' }} onClick={colorChange} />\r\n          <Li style={{ backgroundColor: '#e84118' }} onClick={colorChange} />\r\n          <Li\r\n            style={{ backgroundColor: '#ffffff', border: '1px solid black' }}\r\n            onClick={colorChange}\r\n          />\r\n        </Ul>\r\n        <InputContainer>\r\n          <PainterSize size={lineSize} color={canvasState.strokeStyle} />\r\n          <RangeInput\r\n            type=\"range\"\r\n            min=\"0.1\"\r\n            max=\"100\"\r\n            defaultValue={lineSize}\r\n            onChange={lineChange}\r\n            onMouseUp={lineWidthChange}\r\n          />\r\n        </InputContainer>\r\n      </Container>\r\n      <Button>SAVE</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}