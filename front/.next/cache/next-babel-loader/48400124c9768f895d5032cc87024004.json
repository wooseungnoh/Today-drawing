{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  isLoggedIn: false,\n  isLoggingIn: false,\n  isSignedUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: '',\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보\n  isUserLoadding: false,\n  editing: false\n};\nconst dummyUser = {\n  id: 1,\n  nickName: '노우승',\n  userInfo: '안녕하세요 노우승입니다.',\n  photo: []\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_REQUEST';\nexport const EDITING_PROFILE_REQUEST = 'EDITING_PROFILE_REQUEST';\nexport const EDITING_PROFILE_SUCCESS = 'EDITING_PROFILE_SUCCESS';\nexport const EDITING_PROFILE_FAILURE = 'EDITING_PROFILE_FAILURE';\nexport const EDITING_PROFILE_OFF = 'EDITING_PROFILE_OFF';\nexport const EDITING_PROFILE_ON = 'EDITING_PROFILE_ON';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          isUserLoadding: true\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          isUserLoadding: false,\n          me: action.data\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false\n        });\n      }\n\n    case LOG_OUT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isUserLoadding: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isUserLoadding: false,\n          me: action.data,\n          editing: true\n        });\n      }\n\n    case EDITING_PROFILE_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isUserLoadding: true\n        });\n      }\n\n    case EDITING_PROFILE_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          editing: false,\n          isUserLoadding: false,\n          me: action.data\n        });\n      }\n\n    case EDITING_PROFILE_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDITING_PROFILE_OFF:\n      {\n        return _objectSpread({}, state, {\n          editing: false,\n          isUserLoadding: false\n        });\n      }\n\n    case EDITING_PROFILE_ON:\n      {\n        return _objectSpread({}, state, {\n          editing: true\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:/todayDraw/front/reducers/user.js"],"names":["initialState","isLoggedIn","isLoggingIn","isSignedUp","isSigningUp","signUpErrorReason","me","isUserLoadding","editing","dummyUser","id","nickName","userInfo","photo","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","EDITING_PROFILE_REQUEST","EDITING_PROFILE_SUCCESS","EDITING_PROFILE_FAILURE","EDITING_PROFILE_OFF","EDITING_PROFILE_ON","state","action","type","data"],"mappings":"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","sourcesContent":["export const initialState = {\r\n  isLoggedIn: false,\r\n  isLoggingIn: false,\r\n  isSignedUp: false, // 회원가입 성공\r\n  isSigningUp: false, // 회원가입 시도중\r\n  signUpErrorReason: '', // 회원가입 실패 사유\r\n  me: null, // 내 정보\r\n  isUserLoadding: false,\r\n  editing: false,\r\n};\r\n\r\nconst dummyUser = {\r\n  id: 1,\r\n  nickName: '노우승',\r\n  userInfo: '안녕하세요 노우승입니다.',\r\n  photo: [],\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_REQUEST';\r\n\r\nexport const EDITING_PROFILE_REQUEST = 'EDITING_PROFILE_REQUEST';\r\nexport const EDITING_PROFILE_SUCCESS = 'EDITING_PROFILE_SUCCESS';\r\nexport const EDITING_PROFILE_FAILURE = 'EDITING_PROFILE_FAILURE';\r\n\r\nexport const EDITING_PROFILE_OFF = 'EDITING_PROFILE_OFF';\r\nexport const EDITING_PROFILE_ON = 'EDITING_PROFILE_ON';\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOAD_USER_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOAD_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        me: action.data,\r\n      };\r\n    }\r\n    case LOAD_USER_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOG_IN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        isUserLoadding: true,\r\n      };\r\n    }\r\n    case LOG_IN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isUserLoadding: false,\r\n        me: action.data,\r\n      };\r\n    }\r\n    case LOG_IN_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n    }\r\n    case LOG_OUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOG_OUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn:false\r\n      };\r\n    }\r\n    case LOG_OUT_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case SIGN_UP_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        isUserLoadding: true,\r\n      };\r\n    }\r\n    case SIGN_UP_FAILURE: {\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n      };\r\n    }\r\n    case SIGN_UP_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isUserLoadding: false,\r\n        me: action.data,\r\n        editing: true,\r\n      };\r\n    }\r\n    case EDITING_PROFILE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        isUserLoadding: true,\r\n      };\r\n    }\r\n    case EDITING_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        editing: false,\r\n        isUserLoadding: false,\r\n        me: action.data,\r\n      };\r\n    }\r\n    case EDITING_PROFILE_FAILURE: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case EDITING_PROFILE_OFF: {\r\n      return {\r\n        ...state,\r\n        editing: false,\r\n        isUserLoadding: false,\r\n      };\r\n    }\r\n    case EDITING_PROFILE_ON: {\r\n      return {\r\n        ...state,\r\n        editing: true,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}