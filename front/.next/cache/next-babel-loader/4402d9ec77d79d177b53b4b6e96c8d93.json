{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport user, { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, SIGN_UP_FAILURE, EDITING_PROFILE_SUCCESS, EDITING_PROFILE_REQUEST, EDITING_PROFILE_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user';\n\nfunction signUpAPI(signUpData) {\n  return axios.post('http://localhost:5000/signup', signUpData, {\n    withCredentials: true\n  });\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: SIGN_UP_FAILURE\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction loginAPI(loginData) {\n  return axios.post('http://localhost:5000/login', loginData, {\n    withCredentials: true\n  });\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeEvery(LOG_IN_REQUEST, login);\n} // 사용자 프로필 수정\n\n\nfunction editingAPI(userID) {\n  return axios.post('http://localhost:5000/editing', userID, {\n    withCredentials: true\n  });\n}\n\nfunction* editing(action) {\n  try {\n    const result = yield call(editingAPI, action.data);\n    const userData = JSON.parse(result.config.data);\n    const {\n      me,\n      writerData\n    } = userData;\n    yield put({\n      type: EDITING_PROFILE_SUCCESS,\n      data: _objectSpread({}, me, {}, writerData)\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: EDITING_PROFILE_FAILURE\n    });\n  }\n}\n\nfunction* watchEditing() {\n  yield takeEvery(EDITING_PROFILE_REQUEST, editing);\n} //유저 로딩\n\n\nfunction loadUserAPI() {\n  return axios.get('http://localhost:5000/load', {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {}\n}\n\nfunction* watchloadUser() {\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\n} // 로그아웃\n\n\nfunction logOutAPI() {\n  return axios.post('http://localhost:5000/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: LOG_OUT_FAILURE\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n} // 좋아하는 리스트 불러오기\n//유저 로딩\n\n\nfunction loadLikePostAPI() {\n  return axios.get('http://localhost:5000/load', {\n    withCredentials: true\n  });\n}\n\nfunction* loadLikePost() {\n  try {\n    const result = yield call(loadLikePostAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {}\n}\n\nfunction* watchloadLikePost() {\n  yield takeEvery(LOAD_USER_REQUEST, loadLikePost);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp), fork(watchEditing), fork(watchloadUser), fork(watchLogOut), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/user.js"],"names":["all","delay","fork","put","takeEvery","call","axios","user","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","SIGN_UP_FAILURE","EDITING_PROFILE_SUCCESS","EDITING_PROFILE_REQUEST","EDITING_PROFILE_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","signUpAPI","signUpData","post","withCredentials","signUp","action","result","data","type","e","console","log","watchSignUp","loginAPI","loginData","login","watchLogin","editingAPI","userID","editing","userData","JSON","parse","config","me","writerData","watchEditing","loadUserAPI","get","loadUser","watchloadUser","logOutAPI","logOut","watchLogOut","loadLikePostAPI","loadLikePost","watchloadLikePost","userSaga"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport user, {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_FAILURE,\r\n  EDITING_PROFILE_SUCCESS,\r\n  EDITING_PROFILE_REQUEST,\r\n  EDITING_PROFILE_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n} from '../reducers/user';\r\n\r\nfunction signUpAPI(signUpData) {\r\n  return axios.post('http://localhost:5000/signup', signUpData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction loginAPI(loginData) {\r\n  return axios.post('http://localhost:5000/login', loginData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* login(action) {\r\n  try {\r\n    const result = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeEvery(LOG_IN_REQUEST, login);\r\n}\r\n\r\n// 사용자 프로필 수정\r\n\r\nfunction editingAPI(userID) {\r\n  return axios.post('http://localhost:5000/editing', userID, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* editing(action) {\r\n  try {\r\n    const result = yield call(editingAPI, action.data);\r\n    const userData = JSON.parse(result.config.data);\r\n    const { me, writerData } = userData;\r\n    yield put({\r\n      type: EDITING_PROFILE_SUCCESS,\r\n      data: { ...me, ...writerData },\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: EDITING_PROFILE_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEditing() {\r\n  yield takeEvery(EDITING_PROFILE_REQUEST, editing);\r\n}\r\n\r\n//유저 로딩\r\nfunction loadUserAPI() {\r\n  return axios.get('http://localhost:5000/load', {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* loadUser() {\r\n  try {\r\n    const result = yield call(loadUserAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {}\r\n}\r\nfunction* watchloadUser() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\n// 로그아웃\r\nfunction logOutAPI() {\r\n  return axios.post(\r\n    'http://localhost:5000/logout',\r\n    {},\r\n    {\r\n      withCredentials: true,\r\n    },\r\n  );\r\n}\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n    });\r\n  }\r\n}\r\nfunction* watchLogOut() {\r\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\n// 좋아하는 리스트 불러오기\r\n//유저 로딩\r\nfunction loadLikePostAPI() {\r\n  return axios.get('http://localhost:5000/load', {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* loadLikePost() {\r\n  try {\r\n    const result = yield call(loadLikePostAPI);\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {}\r\n}\r\nfunction* watchloadLikePost() {\r\n  yield takeEvery(LOAD_USER_REQUEST, loadLikePost);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchSignUp),\r\n    fork(watchEditing),\r\n    fork(watchloadUser),\r\n    fork(watchLogOut),\r\n    fork(watchLogOut),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}