{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\todayDraw\\\\front\\\\pages\\\\upload.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Router from 'next/Router';\nimport Container from '../components/container';\nimport { Input, Form, Textarea } from '../components/uiComponent';\nimport { UPPLOAD_CANVAS_REQUEST, DELETE_PHOTO, UPPLOAD_POST_REQUEST } from '../reducers/drawing';\nimport { useInput } from './login';\n\nvar Upload = function Upload() {\n  var _useSelector = useSelector(function (state) {\n    return state.drawing;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      isLoggedIn = _useSelector2.isLoggedIn;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      title = _useInput2[0],\n      setTitle = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      desciption = _useInput4[0],\n      setDesciption = _useInput4[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!isLoggedIn) {\n      Router.push('/');\n    }\n  }, [isLoggedIn]);\n\n  var addPhoto = function addPhoto(e) {\n    e.preventDefault();\n    dispatch({\n      type: UPPLOAD_POST_REQUEST,\n      data: {\n        title: title,\n        desciption: desciption,\n        imagePaths: imagePaths\n      }\n    });\n  };\n\n  var handlePhotoFile = function handlePhotoFile(e) {\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('photo', f);\n    });\n    dispatch({\n      type: UPPLOAD_CANVAS_REQUEST,\n      data: imageFormData\n    });\n  };\n\n  var handleDeleteImage = function handleDeleteImage() {\n    dispatch({\n      type: DELETE_PHOTO\n    });\n  };\n\n  return __jsx(Container, {\n    flexDirection: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: {\n      minHeight: '200px',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '300px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, imagePaths[0] ? __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: \"http://localhost:5000/\".concat(imagePaths[0]),\n    style: {\n      width: '100%'\n    },\n    alt: imagePaths[0],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: handleDeleteImage,\n    style: {\n      position: 'absolute',\n      top: '5px',\n      right: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"X\")) : __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"\\uBBF8\\uB9AC\\uBCF4\\uAE30 \\uC774\\uBBF8\\uC9C0\")), __jsx(Form, {\n    onSubmit: addPhoto,\n    encType: \"multipart/form-data\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"\\uD30C\\uC77C \\uC120\\uD0DD\"), __jsx(Input, {\n    type: \"file\",\n    name: \"photo\",\n    onChange: handlePhotoFile,\n    accept: \"image/*\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"\\uADF8\\uB9BC \\uC81C\\uBAA9\"), __jsx(Input, {\n    value: title,\n    onChange: setTitle,\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"\\uADF8\\uB9BC \\uC124\\uBA85\"), __jsx(Textarea, {\n    value: desciption,\n    onChange: setDesciption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(Input, {\n    type: \"submit\",\n    value: \"\\uC791\\uC131\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["D:/todayDraw/front/pages/upload.js"],"names":["React","useEffect","useSelector","useDispatch","Router","Container","Input","Form","Textarea","UPPLOAD_CANVAS_REQUEST","DELETE_PHOTO","UPPLOAD_POST_REQUEST","useInput","Upload","state","drawing","imagePaths","user","isLoggedIn","title","setTitle","desciption","setDesciption","dispatch","push","addPhoto","e","preventDefault","type","data","handlePhotoFile","imageFormData","FormData","forEach","call","target","files","f","append","handleDeleteImage","minHeight","display","justifyContent","alignItems","width","position","top","right"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Router from 'next/Router';\r\nimport Container from '../components/container';\r\nimport { Input, Form, Textarea } from '../components/uiComponent';\r\nimport {\r\n  UPPLOAD_CANVAS_REQUEST,\r\n  DELETE_PHOTO,\r\n  UPPLOAD_POST_REQUEST,\r\n} from '../reducers/drawing';\r\nimport { useInput } from './login';\r\n\r\nconst Upload = () => {\r\n  const { imagePaths } = useSelector((state) => state.drawing);\r\n  const { isLoggedIn } = useSelector((state) => state.user);\r\n  const [title, setTitle] = useInput('');\r\n  const [desciption, setDesciption] = useInput('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      Router.push('/');\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const addPhoto = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: UPPLOAD_POST_REQUEST,\r\n      data: { title, desciption, imagePaths },\r\n    });\r\n  };\r\n\r\n  const handlePhotoFile = (e) => {\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append('photo', f);\r\n    });\r\n    dispatch({\r\n      type: UPPLOAD_CANVAS_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  };\r\n\r\n  const handleDeleteImage = () => {\r\n    dispatch({\r\n      type: DELETE_PHOTO,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container flexDirection=\"column\">\r\n      <div\r\n        style={{\r\n          minHeight: '200px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          width: '300px',\r\n        }}\r\n      >\r\n        {imagePaths[0] ? (\r\n          <div style={{ position: 'relative' }}>\r\n            <img\r\n              src={`http://localhost:5000/${imagePaths[0]}`}\r\n              style={{ width: '100%' }}\r\n              alt={imagePaths[0]}\r\n            />\r\n            <button\r\n              onClick={handleDeleteImage}\r\n              style={{ position: 'absolute', top: '5px', right: '5px' }}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <span>미리보기 이미지</span>\r\n        )}\r\n      </div>\r\n\r\n      <Form onSubmit={addPhoto} encType=\"multipart/form-data\">\r\n        <label htmlFor=\"file\">파일 선택</label>\r\n        <Input\r\n          type=\"file\"\r\n          name=\"photo\"\r\n          onChange={handlePhotoFile}\r\n          accept=\"image/*\"\r\n        />\r\n\r\n        <label>그림 제목</label>\r\n        <Input value={title} onChange={setTitle} type=\"text\" />\r\n\r\n        <label>그림 설명</label>\r\n        <Textarea value={desciption} onChange={setDesciption} />\r\n        <Input type=\"submit\" value=\"작성\" />\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}