{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPhoto),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPhoto),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(loadedPost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadedPost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(loadedPostDetail),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchloadedPostDetail),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(editPostDetail),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchEditPostDetail),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(deletePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchDeletePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(drawingSaga);\n\nimport { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { UPPLOAD_CANVAS_REQUEST, UPPLOAD_CANVAS_SUCCESS, UPPLOAD_CANVAS_FAILURE, UPPLOAD_POST_REQUEST, UPPLOAD_POST_SUCCESS, UPPLOAD_POST_FAILURE, LOAD_GALLERY_SUCCESS, LOAD_GALLERY_FAILURE, LOAD_GALLERY_REQUEST, LOAD_POST_DETAIL_FAILURE, LOAD_POST_DETAIL_SUCCESS, LOAD_POST_DETAIL_REQUEST, EDIT_POST_DETAIL_SUCCESS, EDIT_POST_DETAIL_FAILURE, EDIT_POST_DETAIL_REQUEST, DELETE_POST_SUCCESS, DELETE_POST_FAILURE, DELETE_POST_REQUEST } from '../reducers/drawing'; // 미리보기 사진 업로드\n\nfunction addPhotoApi(photoData) {\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\n    withCredentials: true\n  });\n}\n\nfunction addPhoto(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPhoto$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPhotoApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: UPPLOAD_CANVAS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: UPPLOAD_CANVAS_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchAddPhoto() {\n  return _regeneratorRuntime.wrap(function watchAddPhoto$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n} // post upload\n\n\nfunction addPostApi(postData) {\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\n    withCredentials: true\n  });\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(addPostApi, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: UPPLOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: UPPLOAD_POST_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(UPPLOAD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n} // loaded post list\n\n\nfunction loadedPostApi() {\n  return axios.get('http://localhost:5000/upload/loaded', {\n    withCredentials: true\n  });\n}\n\nfunction loadedPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadedPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadedPostApi, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_GALLERY_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: LOAD_GALLERY_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchloadedPost() {\n  return _regeneratorRuntime.wrap(function watchloadedPost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n} // 포스트 세부사항 로딩\n\n\nfunction loadedPostDetailApi(urldata) {\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\n    withCredentials: true\n  });\n}\n\nfunction loadedPostDetail(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadedPostDetail$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadedPostDetailApi, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_POST_DETAIL_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.log(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_POST_DETAIL_FAILURE\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchloadedPostDetail() {\n  return _regeneratorRuntime.wrap(function watchloadedPostDetail$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(LOAD_POST_DETAIL_REQUEST, loadedPostDetail);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n} // 포스트 에딧\n\n\nfunction editPostDetailApi(urldata) {\n  return axios.post('http://localhost:5000/upload/editpost', urldata, {\n    withCredentials: true\n  });\n}\n\nfunction editPostDetail(action) {\n  return _regeneratorRuntime.wrap(function editPostDetail$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(editPostDetailApi, action.data);\n\n        case 3:\n          _context9.next = 5;\n          return put({\n            type: EDIT_POST_DETAIL_SUCCESS\n          });\n\n        case 5:\n          _context9.next = 12;\n          break;\n\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(_context9.t0);\n          _context9.next = 12;\n          return put({\n            type: EDIT_POST_DETAIL_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 7]]);\n}\n\nfunction watchEditPostDetail() {\n  return _regeneratorRuntime.wrap(function watchEditPostDetail$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(EDIT_POST_DETAIL_REQUEST, editPostDetail);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n} // 포스트 지우기\n\n\nfunction deletePostApi(urldata) {\n  return axios.post('http://localhost:5000/upload/editpost', urldata, {\n    withCredentials: true\n  });\n}\n\nfunction deletePost(action) {\n  return _regeneratorRuntime.wrap(function deletePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(deletePostApi, action.data);\n\n        case 3:\n          _context11.next = 5;\n          return put({\n            type: DELETE_POST_SUCCESS\n          });\n\n        case 5:\n          _context11.next = 12;\n          break;\n\n        case 7:\n          _context11.prev = 7;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.log(_context11.t0);\n          _context11.next = 12;\n          return put({\n            type: DELETE_POST_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 7]]);\n}\n\nfunction watchDeletePost() {\n  return _regeneratorRuntime.wrap(function watchDeletePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(DELETE_POST_REQUEST, deletePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function drawingSaga() {\n  return _regeneratorRuntime.wrap(function drawingSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchAddPhoto), fork(watchAddPost), fork(watchloadedPost), fork(watchloadedPostDetail), fork(watchEditPostDetail), fork(watchDeletePost)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/drawing.js"],"names":["addPhoto","watchAddPhoto","addPost","watchAddPost","loadedPost","watchloadedPost","loadedPostDetail","watchloadedPostDetail","editPostDetail","watchEditPostDetail","deletePost","watchDeletePost","drawingSaga","all","delay","fork","put","takeEvery","call","axios","UPPLOAD_CANVAS_REQUEST","UPPLOAD_CANVAS_SUCCESS","UPPLOAD_CANVAS_FAILURE","UPPLOAD_POST_REQUEST","UPPLOAD_POST_SUCCESS","UPPLOAD_POST_FAILURE","LOAD_GALLERY_SUCCESS","LOAD_GALLERY_FAILURE","LOAD_GALLERY_REQUEST","LOAD_POST_DETAIL_FAILURE","LOAD_POST_DETAIL_SUCCESS","LOAD_POST_DETAIL_REQUEST","EDIT_POST_DETAIL_SUCCESS","EDIT_POST_DETAIL_FAILURE","EDIT_POST_DETAIL_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","DELETE_POST_REQUEST","addPhotoApi","photoData","post","withCredentials","action","data","result","type","console","log","addPostApi","postData","loadedPostApi","get","loadedPostDetailApi","urldata","editPostDetailApi","deletePostApi"],"mappings":"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","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  UPPLOAD_CANVAS_REQUEST,\r\n  UPPLOAD_CANVAS_SUCCESS,\r\n  UPPLOAD_CANVAS_FAILURE,\r\n  UPPLOAD_POST_REQUEST,\r\n  UPPLOAD_POST_SUCCESS,\r\n  UPPLOAD_POST_FAILURE,\r\n  LOAD_GALLERY_SUCCESS,\r\n  LOAD_GALLERY_FAILURE,\r\n  LOAD_GALLERY_REQUEST,\r\n  LOAD_POST_DETAIL_FAILURE,\r\n  LOAD_POST_DETAIL_SUCCESS,\r\n  LOAD_POST_DETAIL_REQUEST,\r\n  EDIT_POST_DETAIL_SUCCESS,\r\n  EDIT_POST_DETAIL_FAILURE,\r\n  EDIT_POST_DETAIL_REQUEST,\r\n  DELETE_POST_SUCCESS,\r\n  DELETE_POST_FAILURE,\r\n  DELETE_POST_REQUEST,\r\n} from '../reducers/drawing';\r\n\r\n// 미리보기 사진 업로드\r\n\r\nfunction addPhotoApi(photoData) {\r\n  return axios.post('http://localhost:5000/upload/uploadphoto', photoData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPhoto(action) {\r\n  try {\r\n    const result = yield call(addPhotoApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPhoto() {\r\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\r\n}\r\n\r\n// post upload\r\n\r\nfunction addPostApi(postData) {\r\n  return axios.post('http://localhost:5000/upload/uploadpost', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostApi, action.data);\r\n    yield put({\r\n      type: UPPLOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_POST_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeEvery(UPPLOAD_POST_REQUEST, addPost);\r\n}\r\n\r\n// loaded post list\r\n\r\nfunction loadedPostApi() {\r\n  return axios.get('http://localhost:5000/upload/loaded', {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPost(action) {\r\n  try {\r\n    const result = yield call(loadedPostApi, action.data);\r\n    yield put({\r\n      type: LOAD_GALLERY_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_GALLERY_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPost() {\r\n  yield takeEvery(LOAD_GALLERY_REQUEST, loadedPost);\r\n}\r\n\r\n// 포스트 세부사항 로딩\r\n\r\nfunction loadedPostDetailApi(urldata) {\r\n  return axios.post('http://localhost:5000/upload/photodetail', urldata, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* loadedPostDetail(action) {\r\n  try {\r\n    const result = yield call(loadedPostDetailApi, action.data);\r\n    yield put({\r\n      type: LOAD_POST_DETAIL_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: LOAD_POST_DETAIL_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchloadedPostDetail() {\r\n  yield takeEvery(LOAD_POST_DETAIL_REQUEST, loadedPostDetail);\r\n}\r\n\r\n// 포스트 에딧\r\n\r\nfunction editPostDetailApi(urldata) {\r\n  return axios.post('http://localhost:5000/upload/editpost', urldata, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* editPostDetail(action) {\r\n  try {\r\n    yield call(editPostDetailApi, action.data);\r\n    yield put({\r\n      type: EDIT_POST_DETAIL_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: EDIT_POST_DETAIL_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchEditPostDetail() {\r\n  yield takeEvery(EDIT_POST_DETAIL_REQUEST, editPostDetail);\r\n}\r\n\r\n// 포스트 지우기\r\n\r\nfunction deletePostApi(urldata) {\r\n  return axios.post('http://localhost:5000/upload/editpost', urldata, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* deletePost(action) {\r\n  try {\r\n    yield call(deletePostApi, action.data);\r\n    yield put({\r\n      type: DELETE_POST_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: DELETE_POST_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchDeletePost() {\r\n  yield takeEvery(DELETE_POST_REQUEST, deletePost);\r\n}\r\n\r\nexport default function* drawingSaga() {\r\n  yield all([\r\n    fork(watchAddPhoto),\r\n    fork(watchAddPost),\r\n    fork(watchloadedPost),\r\n    fork(watchloadedPostDetail),\r\n    fork(watchEditPostDetail),\r\n    fork(watchDeletePost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}