{"ast":null,"code":"import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { UPPLOAD_CANVAS_REQUEST, UPPLOAD_CANVAS_SUCCESS, UPPLOAD_CANVAS_FAILURE } from '../reducers/drawing';\n\nfunction addPhotoApi() {\n  axios.post();\n}\n\nfunction* addPhoto() {\n  try {\n    yield delay(2000);\n    yield put({\n      type: UPPLOAD_CANVAS_SUCCESS\n    });\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: UPPLOAD_CANVAS_FAILURE\n    });\n  }\n}\n\nfunction* watchAddPhoto() {\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\n}\n\nexport default function* drawingSaga() {\n  yield all([fork(watchAddPhoto)]);\n}","map":{"version":3,"sources":["D:/todayDraw/front/sagas/drawing.js"],"names":["all","delay","fork","put","takeEvery","call","axios","UPPLOAD_CANVAS_REQUEST","UPPLOAD_CANVAS_SUCCESS","UPPLOAD_CANVAS_FAILURE","addPhotoApi","post","addPhoto","type","e","console","log","watchAddPhoto","drawingSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,SAAhC,EAA2CC,IAA3C,QAAuD,oBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,sBADF,EAEEC,sBAFF,EAGEC,sBAHF,QAIO,qBAJP;;AAMA,SAASC,WAAT,GAAuB;AACrBJ,EAAAA,KAAK,CAACK,IAAN;AACD;;AAED,UAAUC,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEL;AADE,KAAD,CAAT;AAGD,GALD,CAKE,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAMX,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEJ;AADE,KAAD,CAAT;AAGD;AACF;;AAED,UAAUQ,aAAV,GAA0B;AACxB,QAAMb,SAAS,CAACG,sBAAD,EAAyBK,QAAzB,CAAf;AACD;;AAED,eAAe,UAAUM,WAAV,GAAwB;AACrC,QAAMlB,GAAG,CAAC,CAACE,IAAI,CAACe,aAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { all, delay, fork, put, takeEvery, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  UPPLOAD_CANVAS_REQUEST,\r\n  UPPLOAD_CANVAS_SUCCESS,\r\n  UPPLOAD_CANVAS_FAILURE,\r\n} from '../reducers/drawing';\r\n\r\nfunction addPhotoApi() {\r\n  axios.post()\r\n}\r\n\r\nfunction* addPhoto() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({\r\n      type: UPPLOAD_CANVAS_FAILURE,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPhoto() {\r\n  yield takeEvery(UPPLOAD_CANVAS_REQUEST, addPhoto);\r\n}\r\n\r\nexport default function* drawingSaga() {\r\n  yield all([fork(watchAddPhoto)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}